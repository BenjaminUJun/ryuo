#!/usr/bin/env python2
import argparse
import os
from matplotlib import pyplot, rc
from scapy.layers.inet import ICMP
from scapy.utils import rdpcap
from ryuo.scapy.layers import Pktgen
from ryuo.tests.utils import get_throughput


font = {'family': 'Nimbus Roman No9 L',
        'weight': 'normal',
        'size': 22}
line_styles = ['-', '--']

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Plot throughput.')
    parser.add_argument('-d', '--dirs', nargs='+', required=True)
    parser.add_argument('-i', '--icmp-only', default=False,
                        action="store_true")
    args = parser.parse_args()

    throughput = {}
    for dir in args.dirs:
        name = dir.split('-')[1]
        files = [os.path.join(dir, fn) for fn in next(os.walk(dir))[2]]
        throughput[name] = {}
        for f in files:
            if args.icmp_only:
                pkts = [pkt for pkt in rdpcap(f) if
                        ICMP in pkt and Pktgen in pkt]
            else:
                pkts = [pkt for pkt in rdpcap(f) if
                        Pktgen in pkt and ICMP not in pkt]
            count = get_throughput(pkts)
            latency = int(os.path.basename(f).split('.')[0].split('-')[2])
            input = 10 ** 9 / float(latency)
            throughput[name][int(input + 0.5)] = count

    rc('font', **font)
    counter = 0
    x = 1700
    for name in throughput:
        keys = sorted(throughput[name].keys())
        values = [throughput[name][key] for key in keys]
        pyplot.plot(keys, values, label=name, linestyle=line_styles[counter])
        while x < 1900:
            if x in throughput[name]:
                pyplot.text(x - 10, throughput[name][x] - 25 * counter + 10,
                            name)
                break
            x += 1
        counter += 1
    pyplot.xlabel('Packets sent per second')
    pyplot.ylabel('Packets received per second')
    pyplot.show()
