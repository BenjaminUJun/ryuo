#!/usr/bin/env python2
import argparse
import os
import json
from ryuo.tests.utils import run_tshark_stats, parse_tshark_stats

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Get record stats')
    parser.add_argument('-d', '--dir', help='Pcap dir', required=True)
    parser.add_argument('-u', '--user', help='Run tshak as user',
                        required=True)

    args = parser.parse_args()
    files = [fn for fn in next(os.walk(args.dir))[2] if fn.endswith('.pcap')]
    for file in files:
        parts = file.split('-')
        pcap_file = os.path.join(args.dir, file)

        results = {}

        total_filter = '!(http or tcp.port<6800)'
        if parts[0] == 'ryu':
            total_filter = '!(http)'
        count_frame = run_tshark_stats(pcap_file, 'COUNT(frame)frame',
                                       total_filter, args.user)
        out, dummy = count_frame.communicate()
        results['total_frame'] = parse_tshark_stats(out)

        sum_tcp = run_tshark_stats(pcap_file, 'SUM(tcp.len)tcp.len',
                                   total_filter, args.user)
        out, dummy = sum_tcp.communicate()
        results['total_tcp'] = parse_tshark_stats(out)

        http_error_filter = 'http.response.code==500'
        count_http_error = run_tshark_stats(pcap_file, 'COUNT(frame)frame',
                                            http_error_filter, args.user)
        out, dummy = count_http_error.communicate()
        results['http_error_frame'] = parse_tshark_stats(out)

        if parts[0] == 'ryu':
            packet_in_out_filter = '(openflow_v4.type==10 || ' \
                                   'openflow_v4.type==13)'
            count_frame = run_tshark_stats(pcap_file, 'COUNT(frame)frame',
                                           packet_in_out_filter, args.user)
            out, dummy = count_frame.communicate()
            results['packet_in_out_frame'] = parse_tshark_stats(out)

            sum_tcp = run_tshark_stats(pcap_file, 'SUM(tcp.len)tcp.len',
                                       packet_in_out_filter, args.user)
            out, dummy = sum_tcp.communicate()
            results['packet_in_out_tcp'] = parse_tshark_stats(out)

            flow_group_mod_filter = '!(openflow_v4.type==13 || ' \
                                    'openflow_v4.type==10)'
            count_frame = run_tshark_stats(pcap_file, 'COUNT(frame)frame',
                                           flow_group_mod_filter, args.user)
            out, dummy = count_frame.communicate()
            results['routing_frame'] = parse_tshark_stats(out)

            sum_tcp = run_tshark_stats(pcap_file, 'SUM(tcp.len)tcp.len',
                                       flow_group_mod_filter, args.user)
            out, dummy = sum_tcp.communicate()
            results['routing_tcp'] = parse_tshark_stats(out)

        with open(pcap_file.split('.')[0] + '.json', 'w') as f:
            f.write(json.dumps(results))